//lab experiment 5
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int precedence(char op)
{
    switch (op)
    {
    case '+':
    case '-':
        return 1;
    case '*':
    case '/':
        return 2;
    case '^':
        return 3;
    default:
        return -1;
    }
}
char*convertInfixToPostfix(char *exp){
int size = strlen(exp), top=-1, index=0;
char operator[size];
char *str = (char*)malloc(size+1);
for(int i=0; i<size; i++){
    char ch=exp[i];
    if(isdigit(ch)|| isalpha(ch))
    str[index++] = ch;
    else if(ch=='+'|| ch=='*'|| ch=='/'|| ch=='^'){
        if(top==-1)
        operator[++top]=ch;
        else{
            while(top!=-1 && precedence(ch)<=precedence(operator[top])){
                str[index++] = operator[top--];
            }
            operator[++top]=ch;
        }
    }
    else if(ch=='(')
    operator[++top] =ch;
    else if(ch==')'){
        while(operator[top] != '('){
            str[index++] = operator[top--];
        }
        top--;
    }
}
}
int main()
{
  char exp[100];
  printf("enter Infix expression :");
  gets(exp);
  printf("postfix form of Infix expression %s is %s\n", exp, convertInfixToPostfix(exp));
    return 0;
}
